# Copyright 2023 Ericsson AB
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: codechecker-bazel-foss-tests

# Triggers the workflow on push or pull request events.
on: [push, pull_request]

permissions: read-all

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Prepares matrix used to generate jobs in foss_{$platform}_test
  # This job assumes that every project initializer script is
  # in `test/foss/project` and script name must be `init.sh`
  # patches must clone their repository into folder: test-proj
  prepare_project_matrix:
    runs-on: ubuntu-24.04
    name: Collecting Projects
    outputs:
      project_configurations: ${{ steps.generate_matrix.outputs.matrix_json }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate dynamic project matrix
        id: generate_matrix
        run: |
          PATCH_DIR="./test/foss/"
          TEMP_JSON_FILE=$(mktemp)
          find "$PATCH_DIR" -maxdepth 1 -mindepth 1 -type d ! -name \
            "templates" -print0 | while IFS= read -r -d $'\0' PROJECT_FOLDER; do
            # Extract project name from folder name
            PROJECT_NAME=$(basename "$PROJECT_FOLDER")
            jq -n -c \
              --arg name "$PROJECT_NAME" \
              --arg folder "$PROJECT_FOLDER" \
              '{ name: $name, folder: $folder }' >> "$TEMP_JSON_FILE"
            echo "Added $PROJECT_NAME to matrix."
          done
          if [ -s "$TEMP_JSON_FILE" ]; then
            FINAL_MATRIX_JSON="[$(paste -s -d ',' "$TEMP_JSON_FILE")]"
          else
            FINAL_MATRIX_JSON="[]"
          fi
          echo "Generated matrix: $FINAL_MATRIX_JSON"
          echo "matrix_json=$FINAL_MATRIX_JSON" >> "$GITHUB_OUTPUT"
        shell: bash

  # TODO: Add script to run tests locally
  foss_ubuntu_test:
    name: "Test rules on FOSS project: ${{ matrix.project.name }}"
    runs-on: ubuntu-24.04
    needs: prepare_project_matrix
    strategy:
      fail-fast: false
      max-parallel: 2 # limit number of concurrent jobs
      matrix:
        project: ${{ fromJson(needs.prepare_project_matrix.outputs.project_configurations) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup environment
        uses: ./.github/platform_environment_setup/ubuntu

      - name: Setup project
        working-directory: ${{ matrix.project.folder }}
        run: sh init.sh
        
      - name: Run Bazel CodeChecker
        working-directory: ${{ matrix.project.folder }}/test-proj
        run: bazel build :codechecker_test
        
      - name: Run Per-File Bazel CodeChecker
        working-directory: ${{ matrix.project.folder }}/test-proj
        run: bazel build :code_checker_test

  foss_rhel_test:
    name: "Test rules on FOSS project: ${{ matrix.project.name }}"
    runs-on: ubuntu-24.04
    container: redhat/ubi9:latest
    needs: prepare_project_matrix
    strategy:
      fail-fast: false
      max-parallel: 2 # limit number of concurrent jobs
      matrix:
        project: ${{ fromJson(needs.prepare_project_matrix.outputs.project_configurations) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup environment
        uses: ./.github/platform_environment_setup/rhel9

      - name: Setup project
        working-directory: ${{ matrix.project.folder }}
        run: sh init.sh
        
      - name: Run Bazel CodeChecker
        working-directory: ${{ matrix.project.folder }}/test-proj
        run: bazel build :codechecker_test
        
      - name: Run Per-File Bazel CodeChecker
        working-directory: ${{ matrix.project.folder }}/test-proj
        run: bazel build :code_checker_test
