name: codechecker-bazel-tests

# Triggers the workflow on push or pull request events.
on: [push, pull_request]

permissions: read-all

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  rules_test:
    name: Unit tests on ubuntu
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set bazel version to 6.5.0
        run: echo "6.5.0" > .bazelversion

      - name: Setup Bazel
        uses: bazel-contrib/setup-bazel@0.15.0

      - name: Install python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install CodeChecker analyzers
        run: |
          sudo apt-get update --quiet
          sudo apt-get install --no-install-recommends \
            clang \
            clang-tools \
            clang-tidy
          # The default naming of the clang-extdef-mapping, needed for CTU, is
          # installed by clang-tools also contains the major version
          # (e.g. clang-extdef-mapping-18), but the bazel rules reference it
          # without the version number. To this end, we use update-alternatives
          # to rename the binary to omit it.
          sudo update-alternatives --install \
            /usr/bin/clang-extdef-mapping \
            clang-extdef-mapping \
            /usr/bin/clang-extdef-mapping-$(clang --version | head -n 1 |
            sed -E 's/.*version ([0-9]+)\..*/\1/') \
            100

      - name: Install CodeChecker
        run: pip3 install codechecker

      - name: Print versions
        run: |
          bazel version
          CodeChecker version
          echo "[NOTE]:CodeChecker analyzers may be different in bazel!"
          CodeChecker analyzers

      - name: Run tests
        run: |
          cd test
          python3 test.py -vvv

  rhel9_test:
    name: Unit tests on RHEL9
    runs-on: ubuntu-24.04
    container: redhat/ubi9:latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set bazel version to 6.5.0
        run: echo "6.5.0" > .bazelversion

      - name: Install CodeChecker analyzers
        run: |
          dnf update -y && \
          dnf install -y \
            llvm-toolset \
            clang-tools-extra \
            wget \
            git \
            python3 \
            python3-pip \
            gcc \
            g++ \
            scl-utils \

      - name: Install CodeChecker
        run: pip3 install codechecker

      - name: Setup Bazel
        run: |
          VERSION=1.26.0; \
          wget "https://github.com/bazelbuild/bazelisk/releases/download/v$VERSION/bazelisk-linux-amd64" && \
          chmod +x bazelisk-linux-amd64 && \
          mv bazelisk-linux-amd64 /usr/local/bin/bazel && \
          USE_BAZEL_VERSION=6.5.0 bazel version

      - name: Print versions
        run: |
          bazel version
          CodeChecker version
          echo "[NOTE]: If you are debugging, its possible that " \
               "CodeChecker finds different analyzers when running in " \
               "bazel's sandbox environment!"
          CodeChecker analyzers

      - name: Run tests
        run: |
          cd test
          python3 test.py -vvv
